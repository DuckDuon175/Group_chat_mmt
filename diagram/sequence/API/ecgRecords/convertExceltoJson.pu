'

@startuml


skinparam style strictuml

skinparam lifelineStrategy solid

skinparam ParticipantPadding 70

skinparam BoxPadding 10

autonumber

actor User as User

box "view" #LightGoldenRodYellow

participant GetECGDataPage as GetECGDataPage

end box

box "route" #lightBlue

participant ECGRecordRoute as ECGRecordRoute

end box


box "controller" #LightGoldenRodYellow
participant ECGRecordController as ECGRecordController

end box


box "model" #lightBlue
participant ECGRecordModel as ECGRecordModel

end box


User -> GetECGDataPage: Request ECG record data
activate User
activate GetECGDataPage

GetECGDataPage -> ECGRecordRoute: GET api/ecg-records/record-data/{:record_id}
activate ECGRecordRoute


ECGRecordRoute -> ECGRecordController: convertExceltoJson(req, res)
activate ECGRecordController

note right of ECGRecordRoute #Aqua
  * Request param:
  record_id = req.params
end note


ECGRecordController -> ECGRecordModel: findOne()
note right of ECGRecordController #Aqua
  * Request param
    record_id: record_id
end note

activate ECGRecordModel


ECGRecordModel --> ECGRecordController: return data_directory


deactivate ECGRecordModel



opt ECG data does not exist
ECGRecordController --> ECGRecordRoute: return response error
end

ECGRecordController -> ECGRecordController: Parse data from file to json format
ECGRecordController --> ECGRecordRoute: return response

deactivate ECGRecordController

alt response error
  ECGRecordRoute --> GetECGDataPage: return exception
  note right of GetECGDataPage
    status: "error"
    message: error description
  end note
else response success
  ECGRecordRoute --> GetECGDataPage: return response
  deactivate ECGRecordRoute

  note right of GetECGDataPage
    status: "success"
    data : [ECGRecord data]
  end note
end
GetECGDataPage --> User: return response
deactivate GetECGDataPage
deactivate User

@enduml

